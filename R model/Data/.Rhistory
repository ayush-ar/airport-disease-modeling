45
dS.dt = - beta * S * I - mu * S + mu
dI.dt = beta * S * I - gamma * I - mu * I
dR.dt = gamma * I - mu * R
return(list(c(dS.dt, dI.dt, dR.dt)))
})
}
#	Having defined everything, now we ask the program ode
#	to actually solve the system:
out <- as.data.frame(ode(func = SIR, y = init.values,
parms = pars, times = times))
#	And now we can make a nice plot of our results:
matplot(out$time, out[ ,2:4], type = "l", xlab = "time",
ylab = "proportion of the population", main = "SIR Model", lwd = 3,
lty = 1, ylim=c(0,1))
legend("right", c("Susceptible", "Infectious", "Removed"),
col = 1:3, lty = 1, lwd = 3)
tail(out)
##
##
##
##
##  Look at R_\infty, the percentage of the population that is infectious during
##  the epidemic.  We can estimate this by finding a root of the equation
##  1 - x - e^(-R0x)
Beta <- as.numeric(pars[1])
Gamma <- as.numeric(pars[2])
R0 <- Beta/Gamma
f <- function(x){
1 - x - exp(-R0 * x)
}
f(1)
uniroot(f, c(.0001,1))  # Finds the root of a single variable function, looking in the given interval
setwd("~/Documents/Uni/Research/airport_flu_modeling/example_data/degree")
degree_0 = read.csv("degree_0.csv")
degree_1 = read.csv("degree_1.csv")
degree_0 = read.csv("degree_0.csv")
dir()
catelog <- sort(dir(), decreasing = F)
catelog
length.data = length(dir())
i = 2
data.out_i
for (i in 1:length.data){
data.out[i] <- read.csv(dir())
}
data.out <- vector(length = length.data)
length.data = length(dir())
for (i in 1:length.data){
data.out <- vector(length = length.data)
data.out[i] <- read.csv(dir())
}
for (i in 1:length.data){
data.out.i <- read.csv(dir())
}
data.out = vector(length = length.data)
length.data = length(dir())
data.out = vector(length = length.data)
for (i in 1:length.data){
data.out.i <- read.csv(dir())
}
length.data = length(dir())
data.out = vector(length = length.data)
for (i in 1:length.data){
assign(i, read.csv(dir()))
}
length.data[3]
length.data = length(dir())
length.data
dir()
dir()[5]
length.data = length(dir())
for (i in 1:length.data){
assign(i, read.csv(dir()[i]))
}
for (i in 1:length.data){
data <- read.csv(dir()[i])
assign(i, data)
}
dir()[46]
a = 5
assign(b, a)
assign(a, b)
b = F
assign(a, b)
assign(b, a)
assign("b", a)
length.data = length(dir())
for (i in 1:length.data){
data <- read.csv(dir()[i])
assign("i", data)
}
View(i)
length.data = length(dir())
data = vector(length = length.data)
for (i in 1:length.data){
datap[,i] <- read.csv(dir()[i])
}
length.data = length(dir())
for (i in 1:length.data){
data <- read.csv(dir()[i])
df[,i] <- data
}
length.data = length(dir())
for (i in 1:length.data){
data <- read.csv(dir()[i])
df[,i] <- data[,2]
}
main.dat <- lapply(dir(),  read.csv, header=TRUE)
main.dat <- lapply(dir(),  read.csv, header=TRUE)
main.dat
for (i in 1:length(dir)){
main.dat <- matrix(c(main.dat), main.dat[i])
}
main.dat <- lapply(dir(),  read.csv, header=TRUE)
main.dat
for (i in 1:length(dir)){
main.dat <- matrix(c(main.dat), main.dat[,i])
}
main.dat[4]
main.dat[5]
data.list <- lapply(dir(),  read.csv, header=TRUE)
main.dat <- do.call("rbind",data.list)
View(main.dat)
main.dat <- do.call("cbind",data.list)
data.list <- lapply(dir(),  read.csv, header=TRUE)
main.dat <- do.call("cbind",data.list)
View(main.dat)
main.dat <- do.call("cbind",data.list[,2])
data.list <- lapply(dir(),  read.csv, header=TRUE)
main.dat <- do.call("cbind",data.list[,2])
main.dat <- do.call("cbind",data.list)
delete <- seq(3,134, by = 2)
delete
main.dat <- main.dat[,-delete]
View(main.dat)
plot(main.dat)
setwd("~/Documents/Uni/Research/airport_flu_modeling/example_data")
write.table(main.dat, file="look.up.table.csv",sep=",",row.names=F)
dir()
main.data = read.csv("look.up.table.csv")
ncol(main.data)
install.packages("scales")
library(scales)
for (i in 1:(ncol(main.data) - 1)){
plot(main.data[,1], main.data[,i + 1], col = alpha("black",0.4), add = F)
}
for (i in 1:(ncol(main.data) - 1)){
points(main.data[,1], main.data[,i + 1], col = alpha("black",0.4))
}
for (i in 1:(ncol(main.data) - 1)){
points(main.data[,1], main.data[,i + 1], col = alpha("black",0.4), pch = 16)
}
points(main.data[,1], main.data[,2:ncol(main.data)], col = alpha("black",0.4), pch = 16)
plot(main.data[,1], main.data[,2:ncol(main.data)],
col = alpha("black",0.4), pch = 16)
points(main.data[,1], main.data[,2:ncol(main.data)-1],
col = alpha("black",0.4), pch = 16)
ncol(main.data)
for (i in 1:(ncol(main.data) - 1)){
points(main.data[,1], main.data[,i + 1],
col = alpha("black",0.4), pch = 16,
main = "Something"
)
}
for (i in 1:(ncol(main.data) - 1)){
points(main.data[,1], main.data[,i + 1],
col = alpha("black",0.4), pch = 16
)
}
for (i in 1:(ncol(main.data) - 1)){
points(main.data[,1], main.data[,i + 1],
col = alpha("black",0.4), pch = 16
)
}
plot()
plot()
plot(main.data[,1],main.data[,2])
for (i in 1:(ncol(main.data) - 1)){
points(main.data[,1], main.data[,i + 1],
col = alpha("black",0.4), pch = 16
)
}
plot(main.data[,1],main.data[,2],
col = alpha("black",0.4), pch = 16,
ylab = "Number of Airport Closures",
xlab = "Vaccination Effort (% Closures)"
)
for (i in 1:(ncol(main.data) - 1)){
points(main.data[,1], main.data[,i + 1],
col = alpha("black",0.4), pch = 16
)
}
med(main.data[,2])
median(main.data[,2])
mean(main.data[,2])
View(main.data)
median.values[1:nrow(main.data)] = median(main.data[1:nrow(main.data)])
median.values <- vector(length = nrow(main.data))
for (i in 1:nrow(main.data)){
median.values[i] <- median(main.data[i,])
}
for (i in 1:nrow(main.data)){
median.values[i] <- median(main.data[i,2:ncol(main.data)])
}
View(main.data)
main.data[5,]
main.data[5,2:length(main.data[1,])-1]
main.data[5,2:length(main.data)-1]
main.data[5,2:length(main.data)-1]
median.matrix <- main.data[,-1]
View(median.matrix)
median.value <- vector(length = length(median.matrix))
for (i in 1:length(median.matrix)){
median.value[i] <- median(median.matrix[i,])
}
View(median.matrix)
plot(median.matrix)
median.matrix <- matrix(median.matrix)
View(main.data)
View(median.matrix)
median.matrix <- data.frame(median.matrix)
median.matrix <- main.data[,-1]
median.matrix <- data.frame(median.matrix)
View(main.data)
median(median.matrix[4,])
median.matrix[4,]
median.matrix[,3]
median.matrix <- main.data[,-1]
median.value <- vector(length = length(median.matrix))
for (i in 1:length(median.matrix)){
median.value[i] <- median(t(median.matrix[,i]))
}
median(t(median.matrix[,5]))
median(t(median.matrix[,1]))
median.value = F
for (i in 1:length(median.matrix)){
median.value[i] <- median(t(median.matrix[,i]))
}
for (i in 1:nrow(median.matrix)){
median.value[i] <- median(t(median.matrix[,i]))
}
nrow(median.matrix)
median.matrix <- main.data[,-1]
median.matrix <- t(median.matrix)
View(median.matrix)
median.matrix <- t(main.data)
median.matrix <- main.data[,-1]
View(median.matrix)
median.matrix <- t(main.data)
median.matrix <- median.matrix[,-1]
View(median.matrix)
median.matrix <- t(main.data[,-1])
median.matrix <- median.matrix[,-1]
View(median.matrix)
median.matrix <- main.data[,-1]
median.matrix <- t(median.matrix)
View(median.matrix)
median.matrix <- median.matrix[,-1]
View(median.matrix)
median.matrix <- main.data[,-1]
median.matrix <- t(median.matrix)
length(median.matrix)
ncol(median.matrix)
View(median.matrix)
plot(median.matrix)
ncol(median.matrix)
for (i in 2:(ncol(median.matrix))){
med.vals[i-1] <- median(median.matrix[,i])
}
med.vals <- F
for (i in 2:(ncol(median.matrix))){
med.vals[i-1] <- median(median.matrix[,i])
}
med.vals <- F
mean.vals <- F
for (i in 2:(ncol(median.matrix))){
med.vals[i-1] <- median(median.matrix[,i])
mean.vals[i-1] <- mean(median.matrix[,i])
}
plot(main.data[,1],main.data[,2],
col = alpha("black",0.4), pch = 16,
ylab = "Number of Airport Closures",
xlab = "Quarantine Effort (% Closures)"
)
for (i in 1:(ncol(main.data) - 1)){
points(main.data[,1], main.data[,i + 1],
col = alpha("black",0.4), pch = 16
)
}
lines(mean.vals, col = "red")
lines(med.vals, col = "blue")
lines(main.data[,1],mean.vals, col = "red")
length(main.data[,1])
View(main.data)
View(median.matrix)
View(median.matrix)
boxplot(main.data)
boxplot(t(main.data))
median.matrix <- main.data[,-1]
median.matrix <- t(median.matrix)
med.vals <- F
mean.vals <- F
for (i in 1:(ncol(median.matrix))){
med.vals[i-1] <- median(median.matrix[,i])
mean.vals[i-1] <- mean(median.matrix[,i])
}
length(mean.vals)
View(median.matrix)
View(median.matrix)
med.vals[0] <- 3273
mean.vals <- F
mean.vals[0] <- 3273
for (i in 1:(ncol(median.matrix))){
med.vals[i-1] <- median(median.matrix[,i])
mean.vals[i-1] <- mean(median.matrix[,i])
}
med.vals[0] <- 3273
med.vals <- F
mean.vals <- F
for (i in 1:(ncol(median.matrix))){
med.vals[i-1] <- median(median.matrix[,i])
mean.vals[i-1] <- mean(median.matrix[,i])
}
plot(main.data[,1],main.data[,2],
col = alpha("black",0.4), pch = 16,
ylab = "Number of Airport Closures",
xlab = "Quarantine Effort (% Closures)"
)
for (i in 1:(ncol(main.data) - 1)){
points(main.data[,1], main.data[,i + 1],
col = alpha("black",0.4), pch = 16
)
}
points(main.data[,1],mean.vals, col = "red")
med.vals[101] <- 0
mean.vals[101] <- 0
lines(main.data[,1],mean.vals, col = "red")
lines(main.data[,1],med.vals, col = "blue")
lines(main.data[,1],mean.vals, col = "red", lwd = 1.5)
lines(main.data[,1],med.vals, col = "blue", lwd = 1.5)
legend(right, c(Mean, Median))
legend(right, c(mean.vals, med.vals))
legend(right, c("mean.vals", "med.vals"))
legend("right", c("mean.vals", "med.vals"))
legend("right", c("mean.vals", "med.vals"), col = c("red", "blue"))
legend("right", c("mean.vals", "med.vals"), col = c("red", "blue"),
lty = 1, lwd = 1.5
)
legend("right", c("Mean", "Median"), col = c("red", "blue"),
lty = 1, lwd = 1.5
)
plot(main.data[,1],main.data[,2],
col = alpha("black",0.4), pch = 16,
ylab = "Number of Airport Closures",
xlab = "Quarantine Effort (% Closures)"
)
for (i in 1:(ncol(main.data) - 1)){
points(main.data[,1], main.data[,i + 1],
col = alpha("black",0.4), pch = 16
)
}
plot(main.data[,1],main.data[,2],
col = alpha("black",0.4), pch = 16,
ylab = "Number of Airport Closures",
xlab = "Quarantine Effort (% Closures)"
)
for (i in 1:(ncol(main.data) - 1)){
points(main.data[,1], main.data[,i + 1],
col = alpha("black",0.4), pch = 16
)
}
# Purpose: Visualize the data for random vaccination efforts, and be able to output the variance,
# median, mean, and eventually build an ANOVA. All data to be sorted by vaccination effort.
# I: csv Data sets
# O: Graphics, Look-up Matrix, and Stats.
library(scales)
# Attach Data
main.data = read.csv("look.up.table.csv")
# Add in points.
plot(main.data[,1],main.data[,2],
col = alpha("black",0.4), pch = 16,
ylab = "Number of Airport Closures",
xlab = "Quarantine Effort (% Closures)"
)
for (i in 1:(ncol(main.data) - 1)){
points(main.data[,1], main.data[,i + 1],
col = alpha("black",0.4), pch = 16
)
}
median.matrix <- main.data[,-1]
median.matrix <- t(median.matrix)
med.vals <- F
mean.vals <- F
for (i in 1:(ncol(median.matrix))){
med.vals[i-1] <- median(median.matrix[,i])
mean.vals[i-1] <- mean(median.matrix[,i])
}
med.vals[101] <- 0
mean.vals[101] <- 0
lines(main.data[,1],mean.vals, col = "red", lwd = 1.5)
lines(main.data[,1],med.vals, col = "blue", lwd = 1.5)
legend("right", c("Mean", "Median"), col = c("red", "blue"),
lty = 1, lwd = 1.5
)
boxplot(t(main.data))
lines(main.data[,1],mean.vals, col = "red", lwd = 1.5)
lines(main.data[,1],med.vals, col = "blue", lwd = 1.5)
lines(t(main.data[,1]),mean.vals, col = "red", lwd = 1.5)
lines(ncol(t(main.data)),mean.vals, col = "red", lwd = 1.5)
lines(1:101,mean.vals, col = "red", lwd = 1.5)
boxplot(t(main.data))
lines(1:nrow(main.data),mean.vals, col = "red", lwd = 1.5)
lines(1:nrow(main.data),med.vals, col = "blue", lwd = 1.5)
legend("right", c("Mean", "Median"), col = c("red", "blue"),
lty = 1, lwd = 1.5
)
setwd("~/Documents/Uni/Research/airport_flu_modeling/data/betweenness")
data.list <- lapply(dir(),  read.csv, header=TRUE)
main.dat <- do.call("cbind",data.list)
delete <- seq(3,134, by = 2)
main.dat <- main.dat[,-delete]
setwd("~/Documents/Uni/Research/airport_flu_modeling/data/Tables")
write.table(main.dat, file="betweenness.table.csv",sep=",",row.names=F)
setwd("~/Documents/Uni/Research/airport_flu_modeling/data/degree")
data.list <- lapply(dir(),  read.csv, header=TRUE)
main.dat <- do.call("cbind",data.list)
delete <- seq(3,134, by = 2)
main.dat <- main.dat[,-delete]
setwd("~/Documents/Uni/Research/airport_flu_modeling/data/Tables")
write.table(main.dat, file="degree.table.csv",sep=",",row.names=F)
setwd("~/Documents/Uni/Research/airport_flu_modeling/data/Tables")
main.data = read.csv("betweenness.table.csv")
# Add in points.
plot(main.data[,1],main.data[,2],
col = alpha("black",0.4), pch = 16,
ylab = "Number of Airport Closures",
xlab = "Quarantine Effort (% Closures)"
)
for (i in 1:(ncol(main.data) - 1)){
points(main.data[,1], main.data[,i + 1],
col = alpha("black",0.4), pch = 16
)
}
median.matrix <- main.data[,-1]
median.matrix <- t(median.matrix)
med.vals <- F
mean.vals <- F
for (i in 1:(ncol(median.matrix))){
med.vals[i-1] <- median(median.matrix[,i])
mean.vals[i-1] <- mean(median.matrix[,i])
}
med.vals[101] <- 0
mean.vals[101] <- 0
lines(main.data[,1],mean.vals, col = "red", lwd = 1.5)
lines(main.data[,1],med.vals, col = "blue", lwd = 1.5)
legend("right", c("Mean", "Median"), col = c("red", "blue"),
lty = 1, lwd = 1.5
)
boxplot(t(main.data))
lines(1:nrow(main.data),mean.vals, col = "red", lwd = 1.5)
lines(1:nrow(main.data),med.vals, col = "blue", lwd = 1.5)
legend("right", c("Mean", "Median"), col = c("red", "blue"),
lty = 1, lwd = 1.5
)
View(main.data)
??seed
?seed
seed??
seed?
setwd("~/Documents/Uni/Research/airport_flu_modeling/R model/Data")
library(igraph)
# Read in data files.
main.data = read.csv("airports.csv")
route.data = read.csv("routes.csv")
# Make Network Code
air.net <- graph.empty()
air.net <- add.vertices(air.net, nrow(vertices),
ID = as.character(vertices[,1])
)
air.net <- graph.empty()
air.net <- add.vertices(air.net, nrow(main.data),
ID = as.character(main.data[,1])
)
View(main.data)
air.net <- graph.empty()
air.net <- add.vertices(air.net, nrow(main.data),
ID = as.character(main.data[,1]),
NAT = as.character(main.data[,4])
)
V(air.net)$NAT["North Korea"]
V(air.net)$NAT
V(air.net)$NAT = North Korea
V(air.net)$NAT = "North Korea"
V(air.net)$NAT == "North Korea"
air.net <- graph.empty()
air.net <- add.vertices(air.net, nrow(main.data),
ID = as.character(main.data[,1]),
NAT = as.character(main.data[,4])
)
V(air.net)$NAT == "North Korea"
for (i in 1:length(main.data)){
if ((V(air.net)$NAT == "North Korea") == T){
count <- count + 1
}
}
count <- 0
for (i in 1:length(main.data)){
if ((V(air.net)$NAT == "North Korea") == T){
count <- count + 1
}
}
