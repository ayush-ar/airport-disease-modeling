rgl.clear()
swarm = read.csv(swarmfiles[i])
print(i)
aspect3d(x=1, y=1, z=1)
plot3d(x=swarm$x, y=swarm$y, z=swarm$z, col="black",xlim=c(0,10), ylim=c(0,10), zlim=c(0,10) )
for (i in 1:length(swarm$x)) {
rgl.lines(c(swarm$x[i], swarm$i[i]), c(swarm$y[i], swarm$j[i]), c(swarm$z[i], swarm$k[i]))
}
mtext3d("x", 'x', col="black")
mtext3d("y", 'y', col="black")
mtext3d("z", 'z', col="black")
rgl.texts(0,0,0, i, col="black")
value = formatC(i, width = 3, format = "d", flag = "0")
rgl.snapshot(paste("swarm_",va
require(rgl)
swarmfiles = dir(pattern="*.csv")
rgl.open()
bg3d("white")
for (i in 1:length(swarmfiles)){
rgl.clear()
swarm = read.csv(swarmfiles[i])
print(i)
aspect3d(x=1, y=1, z=1)
plot3d(x=swarm$x, y=swarm$y, z=swarm$z, col="black",xlim=c(0,10), ylim=c(0,10), zlim=c(0,10) )
for (i in 1:length(swarm$x)) {
rgl.lines(c(swarm$x[i], swarm$i[i]), c(swarm$y[i], swarm$j[i]), c(swarm$z[i], swarm$k[i]), col="black")
}
mtext3d("x", 'x', col="black")
mtext3d("y", 'y', col="black")
mtext3d("z", 'z', col="black")
rgl.texts(0,0,0, i, col="black")
value = formatC(i, width = 3, format = "d", flag = "0")
rgl.snapshot(paste("swarm_",value,".png",sep=""))
}
require(rgl)
swarmfiles = dir(pattern="*.csv")
rgl.open()
bg3d("white")
for (i in 1:length(swarmfiles)){
rgl.clear()
swarm = read.csv(swarmfiles[i])
print(i)
aspect3d(x=1, y=1, z=1)
plot3d(x=swarm$x, y=swarm$y, z=swarm$z, col="black",xlim=c(0,10), ylim=c(0,10), zlim=c(0,10) )
for (i in 1:length(swarm$x)) {
rgl.lines(c(swarm$x[i], swarm$x[i] + swarm$i[i]), c(swarm$y[i], swarm$y[i] + swarm$j[i]), c(swarm$z[i],swarm$z[i] + swarm$k[i]), col="black")
}
mtext3d("x", 'x', col="black")
mtext3d("y", 'y', col="black")
mtext3d("z", 'z', col="black")
rgl.texts(0,0,0, i, col="black")
value = formatC(i, width = 3, format = "d", flag = "0")
rgl.snapshot(paste("swarm_",value,".png",sep=""))
}
require(rgl)
swarmfiles = dir(pattern="*.csv")
rgl.open()
bg3d("white")
for (i in 1:length(swarmfiles)){
rgl.clear()
swarm = read.csv(swarmfiles[i])
print(i)
aspect3d(x=1, y=1, z=1)
plot3d(x=swarm$x, y=swarm$y, z=swarm$z, col="black",xlim=c(0,10), ylim=c(0,10), zlim=c(0,10) )
for (i in 1:length(swarm$x)) {
rgl.lines(c(swarm$x[i], swarm$x[i] + swarm$i[i]), c(swarm$y[i], swarm$y[i] + swarm$j[i]), c(swarm$z[i],swarm$z[i] + swarm$k[i]), col="black")
}
mtext3d("x", 'x', col="black")
mtext3d("y", 'y', col="black")
mtext3d("z", 'z', col="black")
rgl.texts(0,0,0, i, col="black")
value = formatC(i, width = 3, format = "d", flag = "0")
rgl.snapshot(paste("swarm_",value,".png",sep=""))
}
setwd("~/projects/swarm/2014-01-06T221619")
require(rgl)
swarmfiles = dir(pattern="*.csv")
rgl.open()
bg3d("white")
for (i in 1:length(swarmfiles)){
rgl.clear()
swarm = read.csv(swarmfiles[i])
print(i)
aspect3d(x=1, y=1, z=1)
plot3d(x=swarm$x, y=swarm$y, z=swarm$z, col="black",xlim=c(0,10), ylim=c(0,10), zlim=c(0,10) )
for (i in 1:length(swarm$x)) {
rgl.lines(c(swarm$x[i], swarm$x[i] + swarm$i[i]), c(swarm$y[i], swarm$y[i] + swarm$j[i]), c(swarm$z[i],swarm$z[i] + swarm$k[i]), col="black")
}
mtext3d("x", 'x', col="black")
mtext3d("y", 'y', col="black")
mtext3d("z", 'z', col="black")
rgl.texts(0,0,0, i, col="black")
value = formatC(i, width = 3, format = "d", flag = "0")
rgl.snapshot(paste("swarm_",value,".png",sep=""))
}
value = formatC(i, width = 3, format = "d", flag = "0")
require(rgl)
swarmfiles = dir(pattern="*.csv")
rgl.open()
bg3d("white")
for (i in 1:length(swarmfiles)){
rgl.clear()
swarm = read.csv(swarmfiles[i])
print(i)
aspect3d(x=1, y=1, z=1)
plot3d(x=swarm$x, y=swarm$y, z=swarm$z, col="black",xlim=c(0,10), ylim=c(0,10), zlim=c(0,10) )
for (i in 1:length(swarm$x)) {
rgl.lines(c(swarm$x[i], swarm$x[i] + swarm$i[i]), c(swarm$y[i], swarm$y[i] + swarm$j[i]), c(swarm$z[i],swarm$z[i] + swarm$k[i]), col="black")
}
mtext3d("x", 'x', col="black")
mtext3d("y", 'y', col="black")
mtext3d("z", 'z', col="black")
rgl.texts(0,0,0, i, col="black")
value = formatC(i, width = 3, format = "d", flag = "0")
rgl.snapshot(paste("swarm_",value,".png",sep=""))
}
require(rgl)
swarmfiles = dir(pattern="*.csv")
rgl.open()
bg3d("white")
for (i in 1:length(swarmfiles)){
rgl.clear()
swarm = read.csv(swarmfiles[i])
print(i)
aspect3d(x=1, y=1, z=1)
plot3d(x=swarm$x, y=swarm$y, z=swarm$z, col="black",xlim=c(0,10), ylim=c(0,10), zlim=c(0,10) )
for (i in 1:length(swarm$x)) {
rgl.lines(c(swarm$x[i], swarm$x[i] + swarm$i[i]), c(swarm$y[i], swarm$y[i] + swarm$j[i]), c(swarm$z[i],swarm$z[i] + swarm$k[i]), col="black")
}
mtext3d("x", 'x', col="black")
mtext3d("y", 'y', col="black")
mtext3d("z", 'z', col="black")
rgl.texts(0,0,0, i, col="black")
value = formatC(as.numeric(i), width = 3, format = "d", flag = "0")
rgl.snapshot(paste("swarm_",value,".png",sep=""))
}
value = formatC(as.numeric(i), width = 3, format = "d", flag = "0")
i = numeric(i)
i = as.numeric(i)
require(rgl)
swarmfiles = dir(pattern="*.csv")
rgl.open()
bg3d("white")
for (i in 1:length(swarmfiles)){
i = as.numeric(i)
rgl.clear()
swarm = read.csv(swarmfiles[i])
print(i)
aspect3d(x=1, y=1, z=1)
plot3d(x=swarm$x, y=swarm$y, z=swarm$z, col="black",xlim=c(0,10), ylim=c(0,10), zlim=c(0,10) )
for (i in 1:length(swarm$x)) {
rgl.lines(c(swarm$x[i], swarm$x[i] + swarm$i[i]), c(swarm$y[i], swarm$y[i] + swarm$j[i]), c(swarm$z[i],swarm$z[i] + swarm$k[i]), col="black")
}
mtext3d("x", 'x', col="black")
mtext3d("y", 'y', col="black")
mtext3d("z", 'z', col="black")
rgl.texts(0,0,0, i, col="black")
value = formatC(as.numeric(i), width = 3, format = "d", flag = "0")
rgl.snapshot(paste("swarm_",value,".png",sep=""))
}
value = formatC(as.numeric(i), width = 3, format = "d", flag = "0")
value = formatC(as.numeric(i), width = 3, format = "d", flag = "0")
require(rgl)
swarmfiles = dir(pattern="*.csv")
rgl.open()
bg3d("white")
for (i in 1:length(swarmfiles)){
i = as.numeric(i)
value = formatC(as.numeric(i), width = 3, format = "d", flag = "0")
rgl.clear()
swarm = read.csv(swarmfiles[i])
print(i)
aspect3d(x=1, y=1, z=1)
plot3d(x=swarm$x, y=swarm$y, z=swarm$z, col="black",xlim=c(0,10), ylim=c(0,10), zlim=c(0,10) )
for (i in 1:length(swarm$x)) {
rgl.lines(c(swarm$x[i], swarm$x[i] + swarm$i[i]), c(swarm$y[i], swarm$y[i] + swarm$j[i]), c(swarm$z[i],swarm$z[i] + swarm$k[i]), col="black")
}
mtext3d("x", 'x', col="black")
mtext3d("y", 'y', col="black")
mtext3d("z", 'z', col="black")
rgl.texts(0,0,0, i, col="black")
rgl.snapshot(paste("swarm_",value,".png",sep=""))
}
setwd("~/projects/swarm/2014-01-06T224402")
require(rgl)
swarmfiles = dir(pattern="*.csv")
rgl.open()
bg3d("white")
for (i in 1:length(swarmfiles)){
i = as.numeric(i)
value = formatC(as.numeric(i), width = 3, format = "d", flag = "0")
rgl.clear()
swarm = read.csv(swarmfiles[i])
print(i)
aspect3d(x=1, y=1, z=1)
plot3d(x=swarm$x, y=swarm$y, z=swarm$z, col="black",xlim=c(0,10), ylim=c(0,10), zlim=c(0,10) )
for (i in 1:length(swarm$x)) {
rgl.lines(c(swarm$x[i], swarm$x[i] + swarm$i[i]), c(swarm$y[i], swarm$y[i] + swarm$j[i]), c(swarm$z[i],swarm$z[i] + swarm$k[i]), col="black")
}
mtext3d("x", 'x', col="black")
mtext3d("y", 'y', col="black")
mtext3d("z", 'z', col="black")
rgl.texts(0,0,0, i, col="black")
rgl.snapshot(paste("swarm_",value,".png",sep=""))
}
require(rgl)
swarmfiles = dir(pattern="*.csv")
rgl.open()
bg3d("white")
for (i in 1:length(swarmfiles)){
i = as.numeric(i)
value = formatC(as.numeric(i), width = 3, format = "d", flag = "0")
rgl.clear()
swarm = read.csv(swarmfiles[i])
print(i)
aspect3d(x=1, y=1, z=1)
plot3d(x=swarm$x, y=swarm$y, z=swarm$z, col=rainbow(length(swarm$x)),xlim=c(0,10), ylim=c(0,10), zlim=c(0,10) )
for (i in 1:length(swarm$x)) {
rgl.lines(c(swarm$x[i], swarm$x[i] + swarm$i[i]), c(swarm$y[i], swarm$y[i] + swarm$j[i]), c(swarm$z[i],swarm$z[i] + swarm$k[i]), col="black")
}
mtext3d("x", 'x', col="black")
mtext3d("y", 'y', col="black")
mtext3d("z", 'z', col="black")
rgl.texts(0,0,0, i, col="black")
rgl.snapshot(paste("swarm_",value,".png",sep=""))
}
require(rgl)
swarmfiles = dir(pattern="*.csv")
rgl.open()
bg3d("white")
for (i in 1:length(swarmfiles)){
i = as.numeric(i)
value = formatC(as.numeric(i), width = 3, format = "d", flag = "0")
rgl.clear()
swarm = read.csv(swarmfiles[i])
print(i)
aspect3d(x=1, y=1, z=1)
plot3d(x=swarm$x, y=swarm$y, z=swarm$z, col=rainbow(length(swarm$x)),xlim=c(0,10), ylim=c(0,10), zlim=c(0,10) )
for (i in 1:length(swarm$x)) {
rgl.lines(c(swarm$x[i], swarm$x[i] + swarm$i[i]), c(swarm$y[i], swarm$y[i] + swarm$j[i]), c(swarm$z[i],swarm$z[i] + swarm$k[i]), col=rainbow(length(swarm$x)))
}
mtext3d("x", 'x', col="black")
mtext3d("y", 'y', col="black")
mtext3d("z", 'z', col="black")
rgl.texts(0,0,0, i, col="black")
rgl.snapshot(paste("swarm_",value,".png",sep=""))
}
require(rgl)
swarmfiles = dir(pattern="*.csv")
rgl.open()
bg3d("white")
for (i in 1:length(swarmfiles)){
i = as.numeric(i)
value = formatC(as.numeric(i), width = 3, format = "d", flag = "0")
rgl.clear()
swarm = read.csv(swarmfiles[i])
print(i)
aspect3d(x=1, y=1, z=1)
colors = rainbow(length(swarm$x))
plot3d(x=swarm$x, y=swarm$y, z=swarm$z, col=colors,xlim=c(0,10), ylim=c(0,10), zlim=c(0,10) )
for (i in 1:length(swarm$x)) {
rgl.lines(c(swarm$x[i], swarm$x[i] + swarm$i[i]), c(swarm$y[i], swarm$y[i] + swarm$j[i]), c(swarm$z[i],swarm$z[i] + swarm$k[i]), col=colors[i])
}
mtext3d("x", 'x', col="black")
mtext3d("y", 'y', col="black")
mtext3d("z", 'z', col="black")
rgl.texts(0,0,0, i, col="black")
rgl.snapshot(paste("swarm_",value,".png",sep=""))
}
data = vector(100*100)
data = vector(length=100*100)
data = c()
data = matrix(nrow=10, ncol=100)
data = matrix(nrow=100, ncol=100)
for (y in 1:100){
# Y axis
for (x in 1:100) {
data[y,x] = (100-y)/x
}
}
heatmap(data)
data = matrix(nrow=100, ncol=100, byrow=T)
data = matrix(nrow=100, ncol=100, byrow=T)
for (y in 1:100){
# Y axis
for (x in 1:100) {
data[y,x] = (100-y)/x
}
}
heatmap(data)
image(data)
data = matrix(nrow=100, ncol=100, byrow=F)
for (y in 1:100){
# Y axis
for (x in 1:100) {
data[y,x] = (100-y)/x
}
}
image(data)
data = matrix(nrow=100, ncol=100, byrow=F)
for (y in 1:100){
# Y axis
for (x in 1:100) {
data[x,y] = (100-y)/x
}
}
image(data)
plot(data)
View(data)
test = matrix()
test = matrix(nrow=2, ncol=2)
test[1,2] = 5
test[1,1] = 1
test[2,1] = 2
data = matrix(nrow=100, ncol=100, byrow=F)
for (y in 1:100){
# Y axis
for (x in 1:100) {
data[x,y] = (100-y)/x
}
}
plot(data)
image(data)
image(data, col=rainbow(100^2))
data = matrix(nrow=100, ncol=100, byrow=F)
for (y in 1:100){
# Y axis
for (x in 1:100) {
data[y,x] = (100-y)/x
}
}
image(data, col=rainbow(100^2))
data = matrix(nrow=100, ncol=100, byrow=F)
for (y in 1:100){
# Y axis
for (x in 1:100) {
data[y,x] = (101-y)/x
}
}
image(data, col=rainbow(100^2))
data = matrix(nrow=100, ncol=100, byrow=F)
for (y in 1:100){
# Y axis
for (x in 1:100) {
data[y,x] = (101-y)/x
}
}
image(data, col=rainbow(100))
colors <- colorRampPalette("blue","red")
colors <- colorRampPalette(c("blue","red"))
colors <- colorRampPalette(c("blue","red"))
image(data, col=colors(100))
View(test)
View(data)
image(data, col=rainbow(100))
data = matrix(nrow=100, ncol=100, byrow=F)
for (y in 1:100){
# Y axis
for (x in 1:100) {
data[y,x] = (101-y)/(101 - x)
}
}
colors <- colorRampPalette(c("blue","red"))
image(data, col=rainbow(100))
data = matrix(nrow=100, ncol=100, byrow=F)
for (y in 1:100){
# Y axis
for (x in 1:100) {
data[y,x] = (101-y)/x
}
}
colors <- colorRampPalette(c("blue","red"))
image(data, col=rainbow(100))
data = matrix(nrow=100, ncol=100, byrow=F)
for (y in 1:100){
# Y axis
for (x in 1:100) {
data[y,x] = (101-y)/x
}
}
colors <- colorRampPalette(c("blue","red"))
image(data, col=rainbow(100),
ylab="Number Infected", xlab="Number of Closures")
data = matrix(nrow=100, ncol=100, byrow=F)
for (y in 1:100){
# Y axis
for (x in 1:100) {
data[y,x] = (101-y)/(0.1*x)
}
}
colors <- colorRampPalette(c("blue","red"))
image(data, col=rainbow(100),
ylab="Number Infected", xlab="Number of Closures")
image(data, col=rainbow(100),
ylab="Number Infected", xlab="Number of Closures")
data = matrix(nrow=100, ncol=100, byrow=F)
for (y in 1:100){
# Y axis
for (x in 1:100) {
data[y,x] = (101-y)/(10*x)
}
}
colors <- colorRampPalette(c("blue","red"))
image(data, col=rainbow(100),
ylab="Number Infected", xlab="Number of Closures")
data = matrix(nrow=100, ncol=100, byrow=F)
for (y in 1:100){
# Y axis
for (x in 1:100) {
data[y,x] = (101-y)-x
}
}
colors <- colorRampPalette(c("blue","red"))
image(data, col=rainbow(100),
ylab="Number Infected", xlab="Number of Closures")
data = matrix(nrow=100, ncol=100, byrow=F)
for (y in 1:100){
# Y axis
for (x in 1:100) {
data[y,x] = (101-y)-(2*x)
}
}
colors <- colorRampPalette(c("blue","red"))
image(data, col=rainbow(100),
ylab="Number Infected", xlab="Number of Closures")
data = matrix(nrow=100, ncol=100, byrow=F)
for (y in 1:100){
# Y axis
for (x in 1:100) {
data[y,x] = (101-y)-(10*x)
}
}
colors <- colorRampPalette(c("blue","red"))
image(data, col=rainbow(100),
ylab="Number Infected", xlab="Number of Closures")
data = matrix(nrow=100, ncol=100, byrow=F)
for (y in 1:100){
# Y axis
for (x in 1:100) {
data[y,x] = (101-y)-(101*x)
}
}
colors <- colorRampPalette(c("blue","red"))
image(data, col=rainbow(100),
ylab="Number Infected", xlab="Number of Closures")
data = matrix(nrow=100, ncol=100, byrow=F)
for (y in 1:100){
# Y axis
for (x in 1:100) {
data[y,x] = (101-y)-(0.5*x)
}
}
colors <- colorRampPalette(c("blue","red"))
image(data, col=rainbow(100),
ylab="Number Infected", xlab="Number of Closures")
data = matrix(nrow=100, ncol=100, byrow=F)
for (y in 1:100){
# Y axis
for (x in 1:100) {
data[y,x] = (101-y)-x
}
}
colors <- colorRampPalette(c("blue","red"))
image(data, col=rainbow(100),
ylab="Number Infected", xlab="Number of Closures")
library("igraph")
# Load the airport data.
airports = read.csv("data/airports-clean.csv")
names(airports) = c("table_id","id","name","city","country","FAA","IATA","lat","long","alt","timezone","dst")
routes = read.csv("data/routes-clean.csv")
names(routes) = c("table_id","airline","airline_id","source_IATA","source_id","dest_IATA","dest_id","codeshare","stops","equipment")
setwd("~/projects/airport_flu_modeling")
airports = read.csv("data/airports-clean.csv")
names(airports) = c("table_id","id","name","city","country","FAA","IATA","lat","long","alt","timezone","dst")
routes = read.csv("data/routes-clean.csv")
names(routes) = c("table_id","airline","airline_id","source_IATA","source_id","dest_IATA","dest_id","codeshare","stops","equipment")
# Clear the tables of malformed results
routes$source_id <- as.numeric(as.character(routes$source_id))
routes$dest_id <- as.numeric(as.character(routes$dest_id))
routes = routes[complete.cases(routes[,c(5,7)]),]
# Add edges and vertices
edgelist <- cbind(routes$source_id, routes$dest_id)
network = graph(edgelist,directed=T)
degree = centralization.degree(network, mode="in")
for (i in 1:length(degree$res)) {
if (degree$res[i] < 1) {
print(i)
v = V(network)[i]
delete.vertices(network,v)
}
}
V(network)[start]$status <- "I"
start = 3682
V(network)[start]$status <- "I"
V(network) <- "S"
V(network)$status <- "S"
V(network)[start]$status <- "I"
for (i in 1:length(V(network))) {
if (V(network)[i]$status == "I")
{
neighbors = neighbors(network,V(network)[i])
print(neighbors)
}
}
for (i in 1:length(V(network))) {
if (V(network)[i]$status == "I")
{
neighbors = neighbors(network,V(network)[i])
print(i)
print(neighbors)
}
}
