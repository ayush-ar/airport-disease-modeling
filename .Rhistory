# "Ghonnaherpasyphylaids". This disease is highly infectious. On the first day
# it was seen that 1 person became infected with this disease
# (Bs*B*I = 1 individual). Once an individual has contracted this disease,
# Ghonnaherpasyphylaids remains in the body in a latent form for an average
# of 3 days before the individual can infect others. Once infectious the
# longevity of the individual is severely reduced, only expecting to live
# for 13 days, and as of right now, there is no cure. The CDC has been
# contacted, but can't respond to this incredibly remote location for 50 days.
# By the time the CDC arrives will there be anyone left? How many, if any,
# will be left standing when they do...
# Question 1: The Model ---------------------------------------------------
# Really? Ghonnaherpasphylaids?
rm(list=ls())
library(deSolve)
# Place your code to model the population here:
# [1 pt] Parameters, Starting Values & Duration:
# Begin the model with an infectious class of 1 person.
# You will need to calculate the transmission rate (Bs), under the assumption
# that on day one, one individual moves from the S class to the E class
# (Warning - you will need to proportionalize Bs)
pars = c( birth = 0.001,              # Birth rate into S
Bs =  500/499  ,          # Bs = rate of infection
Be =  1/3  ,              # Latent to infectious
mu =  1/13 )              # death rate due to infection
init.values = c(S = 499/500, E=0, I = 1/500, R = 0)
times = seq(0, 50, by = 1)
# [3 pts] Differential Equations Code here:
SEIR = function(time, y.values, parameters) {
with(as.list(c(y.values, parameters)), {
dS.dt = - Bs * S * I + birth * (S + I + E)
dE.dt = Bs * S * I - Be * E
dI.dt = Be * E - mu * I
dR.dt = mu * I
return(list(c(dS.dt, dE.dt, dI.dt, dR.dt)))
})
}
# Insert your code for the output below. However, due to the birthrate, you will
# need to normalize all of the values in your output. Using a function called
# (rowSums), replace the values insuring that each time step sums to 1.
out <- as.data.frame(ode(func = SEIR, y = init.values,
parms = pars, times = times))
out[,2:5] <- out[,2:5] /( rowSums(out[,2:5]))
# Question 2: Graph #1 ------------------------------------------------------
# [2 pt] On a more serious note, along with the model create a single graph
# illustrating the population changes over the 50 days. Title the graph
# "Figure 1" and be sure to include a figure legend and appropitate axis labels
matplot(out$time, out[ ,2:5], type = "l",
main = "Figure 1",
xlab="Time (Days)",
ylab="Proportion of the population",
lwd = 3,
lty = 1, ylim=c(0,1))
legend("right", c("Susceptible",  "Latent", "Infectious", "Removed"),
col = 1:4, lty = 1, lwd = 3)
# Question 3: Graph #2 ------------------------------------------------------
# [2 pt] Using the graph you've made above, add a vertical "indian red" line
# depicting when the CDC would have to arrive to save/cure half the people.
# THEY HAVE THE ANTIDOTE! WHOOO! Title this graph "Figure 2" and don't forget
# proper axis labels and a legend.
# Insert the code below that allows you to determine where to put the line:
# Determine the last chance for greater than
less_than  = out[out$R<=0.5,]
fifty_time = less_than$time[length(less_than$time)]
cat(paste("Day of 50% casualties:",fifty_time))
# Place the code for the your new graph, line and legend here:
# (hint: the abline command might help here.)
matplot(out$time, out[ ,2:5], type = "l",
main = "Figure 2",
xlab="Time (Days)",
ylab="Proportion of the population",
lwd = 3,
lty = 1, ylim=c(0,1))
legend("right", c("Susceptible",  "Latent", "Infectious", "Removed"),
col = c(1:4,"indian red"), lty = 1, lwd = 3)
abline(v=fifty_time,col="indian red")
# Question 4: Last Day ----------------------------------------------------
# [1 pt] Please figure out the last day at which the population will only have
# only one person left. (hint: you may need to create another graph)
# Place any required code below:
## Recalculate the data until there is only one person left.
times = seq(0, 120, by = 1)
out <- as.data.frame(ode(func = SEIR, y = init.values,
parms = pars, times = times))
out[,2:5] <- out[,2:5] /( rowSums(out[,2:5]))
# Find the last day.
more_than_one_person  = out[out$R <= 499/500,]
last_time = more_than_one_person$time[length(more_than_one_person$time)] + 1
cat(paste("Day of last living person:",last_time))
# Interpolate the points.
#slope = (out$R[i] - out$R[i-1]) / (out$time[i] - out$time[i-1])
#time = out$time[i] - ((dead_pop - 0.998) / slope)
matplot(out$time, out[ ,2:5], type = "l",
main = "Figure 3",
xlab="Time (Days)",
ylab="Proportion of the population",
lwd = 3,
lty = 1, ylim=c(0,1))
legend(x=60,y=0.8, c("Susceptible",  "Latent", "Infectious", "Removed"),
col = 1:4, lty = 1, lwd = 3)
abline(v=last_time,col="indian red")
# Question 5: The Conclusions ---------------------------------------------
# [1 pt] Assuming the CDC arrives on day 50, how many individuals will still
# be alive. When would the CDC need to arrive to save half the individuals. In
# the unfortunate case that the CDC can't make it in time, on which day does
# the living population fall below 1 individual. (Print this information to the
# console in a well formed statement)
pop_50days = round(500 * (1 - out$R[51]))
cat(paste("Assuming the CDC arrives on day 50, there will be", pop_50days,
"people alive upon arrival. In\norder to save half of the individuals, the CDC would have to arrive by day",
fifty_time, ". In\nthe case the CDC cannot make it in time, the population will drop *below* 1 on day\n",
last_time + 1))
tail(out)
?tail
tail(out,10)
tail(out,11)
tail(out,15)
# NAME: Nicholas A. Yager
# Homework Assignment #2
# Due Date: Friday the 14th @ 2:30 pm
### PLEASE READ!
# First, please include your code in this file we've generated for you.
# On the due date you should drop a copy of your code in the My Courses dropbox
# with the file title being "Your Name - HW2". Be sure to run your entire
# code for errors before submitting! As always come visit us in office hours if
# you have any questions.
# For this assignment you will generate a differential equations model depicting
# the disease that is described below. Hint: You don't need to generate all new code.
# The Disease ------------------------------------------------------------
# A small population of 500 individuals living in a remote location with a
# birthrate of 0.001, have somehow contracted a new hybrid disease known as
# "Ghonnaherpasyphylaids". This disease is highly infectious. On the first day
# it was seen that 1 person became infected with this disease
# (Bs*B*I = 1 individual). Once an individual has contracted this disease,
# Ghonnaherpasyphylaids remains in the body in a latent form for an average
# of 3 days before the individual can infect others. Once infectious the
# longevity of the individual is severely reduced, only expecting to live
# for 13 days, and as of right now, there is no cure. The CDC has been
# contacted, but can't respond to this incredibly remote location for 50 days.
# By the time the CDC arrives will there be anyone left? How many, if any,
# will be left standing when they do...
# Question 1: The Model ---------------------------------------------------
# Really? Ghonnaherpasphylaids?
rm(list=ls())
library(deSolve)
# Place your code to model the population here:
# [1 pt] Parameters, Starting Values & Duration:
# Begin the model with an infectious class of 1 person.
# You will need to calculate the transmission rate (Bs), under the assumption
# that on day one, one individual moves from the S class to the E class
# (Warning - you will need to proportionalize Bs)
pars = c( birth = 0.001,              # Birth rate into S
Bs =  500/499  ,          # Bs = rate of infection
Be =  1/3  ,              # Latent to infectious
mu =  1/13 )              # death rate due to infection
init.values = c(S = 499/500, E=0, I = 1/500, R = 0)
times = seq(0, 50, by = 1)
# [3 pts] Differential Equations Code here:
SEIR = function(time, y.values, parameters) {
with(as.list(c(y.values, parameters)), {
dS.dt = - Bs * S * I + birth * (S + I + E)
dE.dt = Bs * S * I - Be * E
dI.dt = Be * E - mu * I
dR.dt = mu * I
return(list(c(dS.dt, dE.dt, dI.dt, dR.dt)))
})
}
# Insert your code for the output below. However, due to the birthrate, you will
# need to normalize all of the values in your output. Using a function called
# (rowSums), replace the values insuring that each time step sums to 1.
out <- as.data.frame(ode(func = SEIR, y = init.values,
parms = pars, times = times))
out[,2:5] <- out[,2:5] /( rowSums(out[,2:5]))
# Question 2: Graph #1 ------------------------------------------------------
# [2 pt] On a more serious note, along with the model create a single graph
# illustrating the population changes over the 50 days. Title the graph
# "Figure 1" and be sure to include a figure legend and appropitate axis labels
matplot(out$time, out[ ,2:5], type = "l",
main = "Figure 1",
xlab="Time (Days)",
ylab="Proportion of the population",
lwd = 3,
lty = 1, ylim=c(0,1))
legend("right", c("Susceptible",  "Latent", "Infectious", "Removed"),
col = 1:4, lty = 1, lwd = 3)
# Question 3: Graph #2 ------------------------------------------------------
# [2 pt] Using the graph you've made above, add a vertical "indian red" line
# depicting when the CDC would have to arrive to save/cure half the people.
# THEY HAVE THE ANTIDOTE! WHOOO! Title this graph "Figure 2" and don't forget
# proper axis labels and a legend.
# Insert the code below that allows you to determine where to put the line:
# Determine the last chance for greater than
less_than  = out[out$R<=0.5,]
fifty_time = less_than$time[length(less_than$time)]
cat(paste("Day of 50% casualties:",fifty_time))
# Place the code for the your new graph, line and legend here:
# (hint: the abline command might help here.)
matplot(out$time, out[ ,2:5], type = "l",
main = "Figure 2",
xlab="Time (Days)",
ylab="Proportion of the population",
lwd = 3,
lty = 1, ylim=c(0,1))
legend("right", c("Susceptible",  "Latent", "Infectious", "Removed"),
col = c(1:4,"indian red"), lty = 1, lwd = 3)
abline(v=fifty_time,col="indian red")
# Question 4: Last Day ----------------------------------------------------
# [1 pt] Please figure out the last day at which the population will only have
# only one person left. (hint: you may need to create another graph)
# Place any required code below:
## Recalculate the data until there is only one person left.
times = seq(0, 120, by = 1)
out <- as.data.frame(ode(func = SEIR, y = init.values,
parms = pars, times = times))
out[,2:5] <- out[,2:5] /( rowSums(out[,2:5]))
# Find the last day.
more_than_one_person  = out[out$R <= 499/500,]
last_time = more_than_one_person$time[length(more_than_one_person$time)] + 1
cat(paste("Day of last living person:",last_time))
# Interpolate the points.
#slope = (out$R[i] - out$R[i-1]) / (out$time[i] - out$time[i-1])
#time = out$time[i] - ((dead_pop - 0.998) / slope)
matplot(out$time, out[ ,2:5], type = "l",
main = "Figure 3",
xlab="Time (Days)",
ylab="Proportion of the population",
lwd = 3,
lty = 1, ylim=c(0,1))
legend(x=60,y=0.8, c("Susceptible",  "Latent", "Infectious", "Removed"),
col = 1:4, lty = 1, lwd = 3)
abline(v=last_time,col="indian red")
# Question 5: The Conclusions ---------------------------------------------
# [1 pt] Assuming the CDC arrives on day 50, how many individuals will still
# be alive. When would the CDC need to arrive to save half the individuals. In
# the unfortunate case that the CDC can't make it in time, on which day does
# the living population fall below 1 individual. (Print this information to the
# console in a well formed statement)
pop_50days = round(500 * (1 - out$R[51]))
cat(paste("Assuming the CDC arrives on day 50, there will be", pop_50days,
"people alive upon arrival. In\norder to save half of the individuals, the CDC would have to arrive by day",
fifty_time, ". In\nthe case the CDC cannot make it in time, the population will drop *below* 1 on day\n",
last_time + 1))
legend(x=80,y=0.8, c("Susceptible",  "Latent", "Infectious", "Removed"),
col = 1:4, lty = 1, lwd = 3)
legend(x=80,y=0.7, c("Susceptible",  "Latent", "Infectious", "Removed"),
col = 1:4, lty = 1, lwd = 3)
legend(x=80,y=0.65, c("Susceptible",  "Latent", "Infectious", "Removed"),
col = 1:4, lty = 1, lwd = 3)
# NAME: Nicholas A. Yager
# Homework Assignment #2
# Due Date: Friday the 14th @ 2:30 pm
### PLEASE READ!
# First, please include your code in this file we've generated for you.
# On the due date you should drop a copy of your code in the My Courses dropbox
# with the file title being "Your Name - HW2". Be sure to run your entire
# code for errors before submitting! As always come visit us in office hours if
# you have any questions.
# For this assignment you will generate a differential equations model depicting
# the disease that is described below. Hint: You don't need to generate all new code.
# The Disease ------------------------------------------------------------
# A small population of 500 individuals living in a remote location with a
# birthrate of 0.001, have somehow contracted a new hybrid disease known as
# "Ghonnaherpasyphylaids". This disease is highly infectious. On the first day
# it was seen that 1 person became infected with this disease
# (Bs*B*I = 1 individual). Once an individual has contracted this disease,
# Ghonnaherpasyphylaids remains in the body in a latent form for an average
# of 3 days before the individual can infect others. Once infectious the
# longevity of the individual is severely reduced, only expecting to live
# for 13 days, and as of right now, there is no cure. The CDC has been
# contacted, but can't respond to this incredibly remote location for 50 days.
# By the time the CDC arrives will there be anyone left? How many, if any,
# will be left standing when they do...
# Question 1: The Model ---------------------------------------------------
# Really? Ghonnaherpasphylaids?
rm(list=ls())
library(deSolve)
# Place your code to model the population here:
# [1 pt] Parameters, Starting Values & Duration:
# Begin the model with an infectious class of 1 person.
# You will need to calculate the transmission rate (Bs), under the assumption
# that on day one, one individual moves from the S class to the E class
# (Warning - you will need to proportionalize Bs)
pars = c( birth = 0.001,              # Birth rate into S
Bs =  500/499  ,          # Bs = rate of infection
Be =  1/3  ,              # Latent to infectious
mu =  1/13 )              # death rate due to infection
init.values = c(S = 499/500, E=0, I = 1/500, R = 0)
times = seq(0, 50, by = 1)
# [3 pts] Differential Equations Code here:
SEIR = function(time, y.values, parameters) {
with(as.list(c(y.values, parameters)), {
dS.dt = - Bs * S * I + birth * (S + I + E)
dE.dt = Bs * S * I - Be * E
dI.dt = Be * E - mu * I
dR.dt = mu * I
return(list(c(dS.dt, dE.dt, dI.dt, dR.dt)))
})
}
# Insert your code for the output below. However, due to the birthrate, you will
# need to normalize all of the values in your output. Using a function called
# (rowSums), replace the values insuring that each time step sums to 1.
out <- as.data.frame(ode(func = SEIR, y = init.values,
parms = pars, times = times))
out[,2:5] <- out[,2:5] /( rowSums(out[,2:5]))
# Question 2: Graph #1 ------------------------------------------------------
# [2 pt] On a more serious note, along with the model create a single graph
# illustrating the population changes over the 50 days. Title the graph
# "Figure 1" and be sure to include a figure legend and appropitate axis labels
matplot(out$time, out[ ,2:5], type = "l",
main = "Figure 1",
xlab="Time (Days)",
ylab="Proportion of the population",
lwd = 3,
lty = 1, ylim=c(0,1))
legend("right", c("Susceptible",  "Latent", "Infectious", "Removed"),
col = 1:4, lty = 1, lwd = 3)
# Question 3: Graph #2 ------------------------------------------------------
# [2 pt] Using the graph you've made above, add a vertical "indian red" line
# depicting when the CDC would have to arrive to save/cure half the people.
# THEY HAVE THE ANTIDOTE! WHOOO! Title this graph "Figure 2" and don't forget
# proper axis labels and a legend.
# Insert the code below that allows you to determine where to put the line:
# Determine the last chance for greater than
less_than  = out[out$R<=0.5,]
fifty_time = less_than$time[length(less_than$time)]
cat(paste("Day of 50% casualties:",fifty_time))
# Place the code for the your new graph, line and legend here:
# (hint: the abline command might help here.)
matplot(out$time, out[ ,2:5], type = "l",
main = "Figure 2",
xlab="Time (Days)",
ylab="Proportion of the population",
lwd = 3,
lty = 1, ylim=c(0,1))
legend("right", c("Susceptible",  "Latent", "Infectious", "Removed"),
col = c(1:4,"indian red"), lty = 1, lwd = 3)
abline(v=fifty_time,col="indian red")
# Question 4: Last Day ----------------------------------------------------
# [1 pt] Please figure out the last day at which the population will only have
# only one person left. (hint: you may need to create another graph)
# Place any required code below:
## Recalculate the data until there is only one person left.
times = seq(0, 120, by = 1)
out <- as.data.frame(ode(func = SEIR, y = init.values,
parms = pars, times = times))
out[,2:5] <- out[,2:5] /( rowSums(out[,2:5]))
# Find the last day.
more_than_one_person  = out[out$R <= 499/500,]
last_time = more_than_one_person$time[length(more_than_one_person$time)] + 1
cat(paste("Day of last living person:",last_time))
# Interpolate the points.
#slope = (out$R[i] - out$R[i-1]) / (out$time[i] - out$time[i-1])
#time = out$time[i] - ((dead_pop - 0.998) / slope)
matplot(out$time, out[ ,2:5], type = "l",
main = "Figure 3",
xlab="Time (Days)",
ylab="Proportion of the population",
lwd = 3,
lty = 1, ylim=c(0,1))
legend(x=80,y=0.65, c("Susceptible",  "Latent", "Infectious", "Removed"),
col = 1:4, lty = 1, lwd = 3)
abline(v=last_time,col="indian red")
# Question 5: The Conclusions ---------------------------------------------
# [1 pt] Assuming the CDC arrives on day 50, how many individuals will still
# be alive. When would the CDC need to arrive to save half the individuals. In
# the unfortunate case that the CDC can't make it in time, on which day does
# the living population fall below 1 individual. (Print this information to the
# console in a well formed statement)
pop_50days = round(500 * (1 - out$R[51]))
cat(paste("Assuming the CDC arrives on day 50, there will be", pop_50days,
"people alive upon arrival. In\norder to save half of the individuals, the CDC would have to arrive by day",
fifty_time, ". In\nthe case the CDC cannot make it in time, the population will drop *below* 1 on day\n",
last_time + 1))
last_time
tail(out,11)
tail(out,12)
fifty_time
out
less_than  = out[out$R<0.5,]
less_than
less_than  = out[out$R<0.5,]
less_than  = out[out$R<=0.5,]
less_than
less_than  = out[out$R<0.5,]
fifty_time = less_than$time[length(less_than$time)] + 1
cat(paste("Day of 50% casualties:",fifty_time))
# NAME: Nicholas A. Yager
# Homework Assignment #2
# Due Date: Friday the 14th @ 2:30 pm
### PLEASE READ!
# First, please include your code in this file we've generated for you.
# On the due date you should drop a copy of your code in the My Courses dropbox
# with the file title being "Your Name - HW2". Be sure to run your entire
# code for errors before submitting! As always come visit us in office hours if
# you have any questions.
# For this assignment you will generate a differential equations model depicting
# the disease that is described below. Hint: You don't need to generate all new code.
# The Disease ------------------------------------------------------------
# A small population of 500 individuals living in a remote location with a
# birthrate of 0.001, have somehow contracted a new hybrid disease known as
# "Ghonnaherpasyphylaids". This disease is highly infectious. On the first day
# it was seen that 1 person became infected with this disease
# (Bs*B*I = 1 individual). Once an individual has contracted this disease,
# Ghonnaherpasyphylaids remains in the body in a latent form for an average
# of 3 days before the individual can infect others. Once infectious the
# longevity of the individual is severely reduced, only expecting to live
# for 13 days, and as of right now, there is no cure. The CDC has been
# contacted, but can't respond to this incredibly remote location for 50 days.
# By the time the CDC arrives will there be anyone left? How many, if any,
# will be left standing when they do...
# Question 1: The Model ---------------------------------------------------
# Really? Ghonnaherpasphylaids?
rm(list=ls())
library(deSolve)
# Place your code to model the population here:
# [1 pt] Parameters, Starting Values & Duration:
# Begin the model with an infectious class of 1 person.
# You will need to calculate the transmission rate (Bs), under the assumption
# that on day one, one individual moves from the S class to the E class
# (Warning - you will need to proportionalize Bs)
pars = c( birth = 0.001,              # Birth rate into S
Bs =  500/499  ,          # Bs = rate of infection
Be =  1/3  ,              # Latent to infectious
mu =  1/13 )              # death rate due to infection
init.values = c(S = 499/500, E=0, I = 1/500, R = 0)
times = seq(0, 50, by = 1)
# [3 pts] Differential Equations Code here:
SEIR = function(time, y.values, parameters) {
with(as.list(c(y.values, parameters)), {
dS.dt = - Bs * S * I + birth * (S + I + E)
dE.dt = Bs * S * I - Be * E
dI.dt = Be * E - mu * I
dR.dt = mu * I
return(list(c(dS.dt, dE.dt, dI.dt, dR.dt)))
})
}
# Insert your code for the output below. However, due to the birthrate, you will
# need to normalize all of the values in your output. Using a function called
# (rowSums), replace the values insuring that each time step sums to 1.
out <- as.data.frame(ode(func = SEIR, y = init.values,
parms = pars, times = times))
out[,2:5] <- out[,2:5] /( rowSums(out[,2:5]))
# Question 2: Graph #1 ------------------------------------------------------
# [2 pt] On a more serious note, along with the model create a single graph
# illustrating the population changes over the 50 days. Title the graph
# "Figure 1" and be sure to include a figure legend and appropitate axis labels
matplot(out$time, out[ ,2:5], type = "l",
main = "Figure 1",
xlab="Time (Days)",
ylab="Proportion of the population",
lwd = 3,
lty = 1, ylim=c(0,1))
legend("right", c("Susceptible",  "Latent", "Infectious", "Removed"),
col = 1:4, lty = 1, lwd = 3)
# Question 3: Graph #2 ------------------------------------------------------
# [2 pt] Using the graph you've made above, add a vertical "indian red" line
# depicting when the CDC would have to arrive to save/cure half the people.
# THEY HAVE THE ANTIDOTE! WHOOO! Title this graph "Figure 2" and don't forget
# proper axis labels and a legend.
# Insert the code below that allows you to determine where to put the line:
# Determine the last chance for greater than
less_than  = out[out$R<0.5,]
fifty_time = less_than$time[length(less_than$time)] + 1
cat(paste("Day of 50% casualties:",fifty_time))
# Place the code for the your new graph, line and legend here:
# (hint: the abline command might help here.)
matplot(out$time, out[ ,2:5], type = "l",
main = "Figure 2",
xlab="Time (Days)",
ylab="Proportion of the population",
lwd = 3,
lty = 1, ylim=c(0,1))
legend("right", c("Susceptible",  "Latent", "Infectious", "Removed"),
col = c(1:4,"indian red"), lty = 1, lwd = 3)
abline(v=fifty_time,col="indian red")
# Question 4: Last Day ----------------------------------------------------
# [1 pt] Please figure out the last day at which the population will only have
# only one person left. (hint: you may need to create another graph)
# Place any required code below:
## Recalculate the data until there is only one person left.
times = seq(0, 120, by = 1)
out <- as.data.frame(ode(func = SEIR, y = init.values,
parms = pars, times = times))
out[,2:5] <- out[,2:5] /( rowSums(out[,2:5]))
# Find the last day.
#
# Subset the model data until the
#
more_than_one_person  = out[out$R < 499/500,]
last_time = more_than_one_person$time[length(more_than_one_person$time)]
cat(paste("Day of last living person:",last_time))
matplot(out$time, out[ ,2:5], type = "l",
main = "Figure 3",
xlab="Time (Days)",
ylab="Proportion of the population",
lwd = 3,
lty = 1, ylim=c(0,1))
legend(x=80,y=0.65, c("Susceptible",  "Latent", "Infectious", "Removed"),
col = 1:4, lty = 1, lwd = 3)
abline(v=last_time,col="indian red")
# Question 5: The Conclusions ---------------------------------------------
# [1 pt] Assuming the CDC arrives on day 50, how many individuals will still
# be alive. When would the CDC need to arrive to save half the individuals. In
# the unfortunate case that the CDC can't make it in time, on which day does
# the living population fall below 1 individual. (Print this information to the
# console in a well formed statement)
pop_50days = round(500 * (1 - out$R[51]))
cat(paste("Assuming the CDC arrives on day 50, there will be", pop_50days,
"people alive upon arrival. In\norder to save half of the individuals, the CDC would have to arrive by day",
fifty_time, ". In\nthe case the CDC cannot make it in time, the population will drop *below* 1 on day\n",
last_time + 1))
fifty_time
out
